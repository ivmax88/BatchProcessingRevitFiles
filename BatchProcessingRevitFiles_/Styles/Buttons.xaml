<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Control}" x:Key="BaseStyle">
    </Style>


    <!-- Icon button -->
    <Style x:Key="IconGrowButton" TargetType="{x:Type Button}" >

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="DeepSkyBlue"/>

        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">

                        <Border.BitmapEffect >
                            <DropShadowBitmapEffect Color="SkyBlue" Direction="320" Softness="0.7" ShadowDepth="5" Opacity="0.7" />
                        </Border.BitmapEffect>

                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.3" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.3" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.15" 
                                                     Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="1.1" Duration="0:0:0.15"   
                                                         AutoReverse="False"
                                                          />
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="1.1" Duration="0:0:0.15" 
                                                         AutoReverse="False"
                                                          />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="1.3" Duration="0:0:0.15"   
                                                         AutoReverse="False"
                                                          />
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="1.3" Duration="0:0:0.15" 
                                                         AutoReverse="False"
                                                          />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <!-- Standart button button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowStandartButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource main5Brush}" />
        <Setter Property="Foreground" Value="{StaticResource mainBrush}" />
        <Setter Property="Padding" Value="3 1" />
        <Setter Property="FontFamily" Value="{StaticResource OpenSans}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource A2Brush}"
                            CornerRadius="4"
                            x:Name="border"
                            >
                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>
                        
                        <TextBlock VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.9" Duration="0:0:0.1"   
                                                         AutoReverse="False"
                                                          />
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="1.1" Duration="0:0:0.1" 
                                                         AutoReverse="False"
                                                          />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0:0:0.15"   
                                                         AutoReverse="False"
                                                          />
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="1" Duration="0:0:0.15" 
                                                         AutoReverse="False"
                                                          />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource B5Brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource BBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource main4Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ABrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource main5Brush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Margin" Value="10" />

    </Style>

</ResourceDictionary>